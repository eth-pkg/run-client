# Accepts Terms and Conditions (for non-interactive environments). (default: false)
PRYSM_CLI_VALIDATOR_ACCEPT_TERMS_OF_USE=

# Specifies the timeout value for API requests in seconds. (default: 120)
PRYSM_CLI_VALIDATOR_API_TIMEOUT=

# Path to a YAML file with chain config values.
PRYSM_CLI_VALIDATOR_CHAIN_CONFIG_FILE=

# Prompt for clearing any previously stored data at the data directory. (default: false)
PRYSM_CLI_VALIDATOR_CLEAR_DB=

# Filepath to a yaml file with flag values.
PRYSM_CLI_VALIDATOR_CONFIG_FILE=

# Data directory for the databases. (default: "/home/eniko/.eth2")
PRYSM_CLI_VALIDATOR_DATADIR=

# Output directory for db backups.
PRYSM_CLI_VALIDATOR_DB_BACKUP_OUTPUT_DIR=

# Disables monitoring service. (default: false)
PRYSM_CLI_VALIDATOR_DISABLE_MONITORING=

# Enables the E2E testing config, only for use within end-to-end testing. (default: false)
PRYSM_CLI_VALIDATOR_E2E_CONFIG=

# Serves HTTP handler to initiate database backups.
# The handler is served on the monitoring port at path /db/backup. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_DB_BACKUP_WEBHOOK=

# Enables request tracing. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_TRACING=

# Clears any previously stored data at the data directory. (default: false)
PRYSM_CLI_VALIDATOR_FORCE_CLEAR_DB=

# Integer to define max receive message call size (in bytes).
# If serving a public gRPC server, set this to a more reasonable size to avoid
# resource exhaustion from large messages. Validators with as many as 10000 keys
# can be run with a max message size of less than 50Mb. The default here is set
# to a very high value for local users. (default: 2147483647)
PRYSM_CLI_VALIDATOR_GRPC_MAX_MSG_SIZE=

# Specifies log file name, relative or absolute.
PRYSM_CLI_VALIDATOR_LOG_FILE=

# Specifies log formatting. Supports: text, json, fluentd, journald. (default: "text")
PRYSM_CLI_VALIDATOR_LOG_FORMAT=

# Uses minimal config with parameters as defined in the spec. (default: false)
PRYSM_CLI_VALIDATOR_MINIMAL_CONFIG=

# Host used for listening and responding metrics for prometheus. (default: "127.0.0.1")
PRYSM_CLI_VALIDATOR_MONITORING_HOST=

# Port used to listening and respond metrics for Prometheus. (default: 8081)
PRYSM_CLI_VALIDATOR_MONITORING_PORT=

# Indicates what fraction of p2p messages are sampled for tracing. (default: 0.2)
PRYSM_CLI_VALIDATOR_TRACE_SAMPLE_FRACTION=

# Tracing endpoint defines where beacon chain traces are exposed to Jaeger. (default: "http://127.0.0.1:14268/api/traces")
PRYSM_CLI_VALIDATOR_TRACING_ENDPOINT=

# Name to apply to tracing tag process_name.
PRYSM_CLI_VALIDATOR_TRACING_PROCESS_NAME=

# Logging verbosity. (trace, debug, info, warn, error, fatal, panic) (default: "info")
PRYSM_CLI_VALIDATOR_VERBOSITY=

# Turns on block profiling with the given rate. (default: 0)
PRYSM_CLI_VALIDATOR_BLOCKPROFILERATE=

# Writes CPU profile to the given file.
PRYSM_CLI_VALIDATOR_CPUPROFILE=

# Turns on memory profiling with the given rate. (default: 524288)
PRYSM_CLI_VALIDATOR_MEMPROFILERATE=

# Turns on mutex profiling with the given rate. (default: 0)
PRYSM_CLI_VALIDATOR_MUTEXPROFILEFRACTION=

# Enables the pprof HTTP server. (default: false)
PRYSM_CLI_VALIDATOR_PPROF=

# pprof HTTP server listening interface. (default: "127.0.0.1")
PRYSM_CLI_VALIDATOR_PPROFADDR=

# pprof HTTP server listening port. (default: 6060)
PRYSM_CLI_VALIDATOR_PPROFPORT=

# Writes execution trace to the given file.
PRYSM_CLI_VALIDATOR_TRACE=

# Beacon node REST API provider endpoint. (default: "http://127.0.0.1:3500")
PRYSM_CLI_VALIDATOR_BEACON_REST_API_PROVIDER=

# Beacon node RPC gateway provider endpoint. (default: "127.0.0.1:3500")
PRYSM_CLI_VALIDATOR_BEACON_RPC_GATEWAY_PROVIDER=

# Beacon node RPC provider endpoint. (default: "127.0.0.1:4000")
PRYSM_CLI_VALIDATOR_BEACON_RPC_PROVIDER=

# Disables prometheus metrics for validator accounts. Operators with high volumes
# of validating keys may wish to disable granular prometheus metrics as it increases
# the data cardinality. (default: false)
PRYSM_CLI_VALIDATOR_DISABLE_ACCOUNT_METRICS=

# Disables reward/penalty logging during cluster deployment. (default: false)
PRYSM_CLI_VALIDATOR_DISABLE_REWARDS_PENALTIES_LOGGING=

# To enable the use of prysm validator client in Distributed Validator Cluster (default: false)
PRYSM_CLI_VALIDATOR_DISTRIBUTED=

# Enables builder validator registration APIs for the validator client to update settings
# such as fee recipient and gas limit. This flag is not required if using proposer
# settings config file. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_BUILDER=

# String to include in proposed blocks.
PRYSM_CLI_VALIDATOR_GRAFFITI=

# Path to a YAML file with graffiti values.
PRYSM_CLI_VALIDATOR_GRAFFITI_FILE=

# Comma separated list of domains from which to accept cross origin requests (browser enforced).
# This flag has no effect if not used with --grpc-gateway-port.
# (default: "http://localhost:7500,http://127.0.0.1:7500,http://0.0.0.0:7500,http://localhost:4242,http://127.0.0.1:4242,http://localhost:4200,http://0.0.0.0:4242,http://127.0.0.1:4200,http://0.0.0.0:4200,http://localhost:3000,http://0.0.0.0:3000,http://127.0.0.1:3000")
PRYSM_CLI_VALIDATOR_GRPC_GATEWAY_CORSDOMAIN=

# Host on which the gateway server runs on. (default: "127.0.0.1")
PRYSM_CLI_VALIDATOR_GRPC_GATEWAY_HOST=

# Enables gRPC gateway for JSON requests. (default: 7500)
PRYSM_CLI_VALIDATOR_GRPC_GATEWAY_PORT=

# Comma separated list of key value pairs to pass as gRPC headers for all gRPC calls.
# Example: --grpc-headers=key=value
PRYSM_CLI_VALIDATOR_GRPC_HEADERS=

# Number of attempts to retry gRPC requests. (default: 5)
PRYSM_CLI_VALIDATOR_GRPC_RETRIES=

# Amount of time between gRPC retry requests. (default: 1s)
PRYSM_CLI_VALIDATOR_GRPC_RETRY_DELAY=

# Sets path to a YAML or JSON file containing validator settings used when proposing blocks such as
# fee recipient and gas limit. File format found in docs.
PRYSM_CLI_VALIDATOR_PROPOSER_SETTINGS_FILE=

# Sets URL to a REST endpoint containing validator settings used when proposing blocks such as
# fee recipient and gas limit. File format found in docs.
PRYSM_CLI_VALIDATOR_PROPOSER_SETTINGS_URL=

# Enables the RPC server for the validator client (without Web UI). (default: false)
PRYSM_CLI_VALIDATOR_RPC=

# Host on which the RPC server should listen. (default: "127.0.0.1")
PRYSM_CLI_VALIDATOR_RPC_HOST=

# RPC port exposed by a validator client. (default: 7000)
PRYSM_CLI_VALIDATOR_RPC_PORT=

# Slasher node RPC provider endpoint. (default: "127.0.0.1:4002")
PRYSM_CLI_VALIDATOR_SLASHER_RPC_PROVIDER=

# Certificate for secure slasher gRPC. Pass this and the tls-key flag in order to use gRPC securely.
PRYSM_CLI_VALIDATOR_SLASHER_TLS_CERT=

# Sets ALL validators' mapping to a suggested eth address to receive gas fees when proposing a block.
# Note that this is only a suggestion when integrating with a Builder API, which may choose to specify
# a different fee recipient as payment for the blocks it builds. For additional setting overrides use the
# --proposer-settings-file or --proposer-settings-url flags. (default: "0x0000000000000000000000000000000000000000")
PRYSM_CLI_VALIDATOR_SUGGESTED_FEE_RECIPIENT=

# Sets gas limit for the builder to use for constructing a payload for all the validators. (default: "30000000")
PRYSM_CLI_VALIDATOR_SUGGESTED_GAS_LIMIT=

# Certificate for secure gRPC. Pass this and the tls-key flag in order to use gRPC securely.
PRYSM_CLI_VALID

ATOR_TLS_CERT=

# Comma separated list of public keys OR an external url endpoint for the validator to retrieve public keys from for usage with web3signer.
PRYSM_CLI_VALIDATOR_VALIDATORS_EXTERNAL_SIGNER_PUBLIC_KEYS=

# URL for consensys' web3signer software to use with the Prysm validator client.
PRYSM_CLI_VALIDATOR_VALIDATORS_EXTERNAL_SIGNER_URL=

# Sets the maximum size for one batch of validator registrations. Use a non-positive value to disable batching. (default: 0)
PRYSM_CLI_VALIDATOR_VALIDATORS_REGISTRATION_BATCH_SIZE=

# Path to a wallet directory on-disk for Prysm validator accounts. (default: "/home/eniko/.eth2validators/prysm-wallet-v2")
PRYSM_CLI_VALIDATOR_WALLET_DIR=

# Path to a plain-text, .txt file containing your wallet password.
PRYSM_CLI_VALIDATOR_WALLET_PASSWORD_FILE=

# (Work in progress): Enables the web portal for the validator client. (default: false)
PRYSM_CLI_VALIDATOR_WEB=

# Fixes validator can attest timely after current block processes. See #8185 for more details. (default: false)
PRYSM_CLI_VALIDATOR_ATTEST_TIMELY=

# (Advanced): Specifies the time duration the validator waits to reload new keys if they have changed on disk.
# Can be any type of duration such as 1.5s, 1000ms, 1m. (default: 1s)
PRYSM_CLI_VALIDATOR_DYNAMIC_KEY_RELOAD_DEBOUNCE_INTERVAL=

# (Experimental): Enables of the beacon REST API when querying a beacon node. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_BEACON_REST_API=

# Enables the validator to perform a doppelganger check.
# This is not "a foolproof method to find duplicate instances in the network.
# Your validator will still be vulnerable if it is being run in unsafe configurations. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_DOPPELGANGER=

# (Experimental): Enables the minimal slashing protection. See EIP-3076 for more details. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_MINIMAL_SLASHING_PROTECTION=

# Enables the pruning of the validator client's slashing protection database. (default: false)
PRYSM_CLI_VALIDATOR_ENABLE_SLASHING_PROTECTION_HISTORY_PRUNING=

# Runs Prysm configured for the Holesky test network. (default: false)
PRYSM_CLI_VALIDATOR_HOLESKY=

# Runs on Ethereum main network. This is the default and can be omitted. (default: true)
PRYSM_CLI_VALIDATOR_MAINNET=

# Runs Prysm configured for the Prater / Goerli test network. (default: false)
PRYSM_CLI_VALIDATOR_PRATER=

# Runs Prysm configured for the Sepolia test network. (default: false)
PRYSM_CLI_VALIDATOR_SEPOLIA=

# (Danger): Writes the wallet password to the wallet directory on completing Prysm web onboarding.
# We recommend against this flag unless you are an advanced user. (default: false)
PRYSM_CLI_VALIDATOR_WRITE_WALLET_PASSWORD_ON_WEB_ONBOARDING=

# Number of validators to deterministically generate.
# Example: --interop-start-index=5 --interop-num-validators=3 would generate keys from index 5 to 7. (default: 0)
PRYSM_CLI_VALIDATOR_INTEROP_NUM_VALIDATORS=

# Start index to deterministically generate validator keys when used in combination with --interop-num-validators.
# Example: --interop-start-index=5 --interop-num-validators=3 would generate keys from index 5 to 7. (default: 0)
PRYSM_CLI_VALIDATOR_INTEROP_START_INDEX=
